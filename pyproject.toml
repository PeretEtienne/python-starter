[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = ["Etienne Peret <etienne.peret@integragen.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = { extras = ["standard"], version = "^0.115.7" }
yarl = "^1.18.3"
pydantic-settings = "^2.7.1"
pydantic = "^2.10.6"
sentry-sdk = "^2.20.0"
prisma = "^0.15.0"
ujson = "^5.10.0"
pytest-asyncio = "^0.25.2"
argon2-cffi = "^23.1.0"
pyjwt = "^2.10.1"
pytest-cov = "^6.0.0"
ruff = "^0.9.4"
pyright = "^1.1.394"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pytest-asyncio = "^0.25.2"
pytest-mock = "^3.14.0"

[tool.ruff]
# List of enabled rulsets.
# See https://docs.astral.sh/ruff/rules/ for more information.
lint.select = [
  "E",   # Error
  "F",   # Pyflakes
  "W",   # Pycodestyle
  "C90", # McCabe complexity
  "I",   # Isort
  "N",   # pep8-naming
  "D",   # Pydocstyle
  "ANN", # Pytype annotations
  "S",   # Bandit
  "B",   # Bugbear
  "COM", # Commas
  "C4",  # Comprehensions
  "ISC", # Implicit string concat
  "PIE", # Unnecessary code
  "T20", # Catch prints
  "PYI", # validate pyi files
  "Q",   # Checks for quotes
  "RSE", # Checks raise statements
  "RET", # Checks return statements
  "SLF", # Self checks
  "SIM", # Simplificator
  "PTH", # Pathlib checks
  "ERA", # Checks for commented out code
  "PL",  # PyLint checks
  "RUF", # Specific to Ruff checks
]
lint.ignore = [
  "S105",    # hardcoded password
  "D103",    # undocumented public function
  "D101",    # undocumented public class
  "D102",    # undocumented public method
  "D105",    # Missing docstring in magic method
  "D107",    # Missing docstring in __init__
  "B008",    # Do not perform function calls in argument defaults
  "D211",    # No blank lines allowed before class docstring
  "D212",    # Multi-line docstring summary should start at the first line
  "D401",    # First line should be in imperative mood
  "D104",    # Missing docstring in public package
  "D100",    # Missing docstring in public module
  "D202",    # No blank lines allowed after function docstring
  "ANN102",  # Missing type annotation for self in method
  "ANN101",  # Missing type annotation for argument
  "ANN401",  # typing.Any are disallowed in `**kwargs
  "PLR0913", # Too many arguments for function call
  "D106",    # Missing docstring in public nested class
]
exclude = [".venv/"]
lint.mccabe = { max-complexity = 10 }
line-length = 120

[tool.ruff.lint.pycodestyle]
max-line-length = 120

[tool.ruff.lint.per-file-ignores]
"test_*" = [
  "S101", # Use of assert detected
  "S106", # hardcoded password
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"
ignore-decorators = ["typing.overload"]

[tool.ruff.lint.pylint]
allow-magic-value-types = ["int", "str", "float", "bytes"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
typeCheckingMode = "strict"
